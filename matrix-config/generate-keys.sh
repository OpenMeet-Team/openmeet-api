#!/bin/bash

# Script to generate JWT signing keys for MAS
# This prevents storing private keys in the repository

set -e

KEYS_DIR="${1:-/tmp/mas-keys}"
ENVIRONMENT="${2:-dev}"

# Create keys directory if it doesn't exist
mkdir -p "$KEYS_DIR"

echo "Generating JWT signing keys for $ENVIRONMENT environment..."

# Generate RSA key for RS256 algorithm
RSA_KEY_PATH="$KEYS_DIR/rsa-key-$ENVIRONMENT.pem"
if [ ! -f "$RSA_KEY_PATH" ]; then
    echo "Generating RSA key..."
    openssl genrsa -out "$RSA_KEY_PATH" 2048
    chmod 600 "$RSA_KEY_PATH"
fi

# Generate EC key for ES256 algorithm
EC_KEY_PATH="$KEYS_DIR/ec-key-$ENVIRONMENT.pem"
if [ ! -f "$EC_KEY_PATH" ]; then
    echo "Generating EC key..."
    openssl ecparam -genkey -name prime256v1 -out "$EC_KEY_PATH"
    chmod 600 "$EC_KEY_PATH"
fi

# Generate the MAS config with the keys
CONFIG_TEMPLATE="$KEYS_DIR/mas-config-$ENVIRONMENT.yaml"

# Read the RSA key content
RSA_KEY_CONTENT=$(cat "$RSA_KEY_PATH")
EC_KEY_CONTENT=$(cat "$EC_KEY_PATH")

# Create the config file with generated keys
cat > "$CONFIG_TEMPLATE" << EOF
# This file is generated by generate-keys.sh - DO NOT EDIT MANUALLY

secrets:
  encryption: "$(openssl rand -hex 32)"
  keys:
    # RSA key for RS256 algorithm ($ENVIRONMENT)
    - kid: "rsa-key-$ENVIRONMENT-001"
      key: |
$(echo "$RSA_KEY_CONTENT" | sed 's/^/        /')

    # EC P-256 key for ES256 algorithm ($ENVIRONMENT)
    - kid: "ec-key-$ENVIRONMENT-001"
      key: |
$(echo "$EC_KEY_CONTENT" | sed 's/^/        /')
EOF

echo "Keys generated successfully in $KEYS_DIR"
echo "MAS config template created at $CONFIG_TEMPLATE"