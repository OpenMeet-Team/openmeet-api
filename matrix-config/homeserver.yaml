## Server name
server_name: "${SYNAPSE_SERVER_NAME}"
public_baseurl: "http://localhost:8448"
pid_file: /data/homeserver.pid

## Trusted key servers
trusted_key_servers:
  - server_name: "matrix.org"
suppress_key_server_warning: true

## Ports for client/federation and respective TLS ports
listeners:
  - port: 8448
    tls: false
    type: http
    x_forwarded: true
    bind_addresses: ['0.0.0.0']
    resources:
      - names: [client, federation, metrics]
        compress: false
        
  # Dedicated metrics listener
  - port: 9090
    type: metrics
    bind_addresses: ['0.0.0.0']

## Database configuration
database:
  name: psycopg2
  args:
    user: "${POSTGRES_USER}"
    password: "${POSTGRES_PASSWORD}"
    database: "${POSTGRES_DB}"
    host: "${POSTGRES_HOST}"
    port: "5432"
    cp_min: 5
    cp_max: 10
  allow_unsafe_locale: true

## Media store configuration
media_store_path: /data/media
max_upload_size: 300M

## Data directory
data_dir: /data

## Log configuration
log_config: "/data/log.config"

## Registration
enable_registration: true
enable_registration_without_verification: true
registration_shared_secret: "${SYNAPSE_REGISTRATION_SHARED_SECRET}"

## Security - using Kubernetes naming convention
macaroon_secret_key: "${SYNAPSE_MACAROON_SECRET_KEY}"
form_secret: "${SYNAPSE_FORM_SECRET}"

## Federation
enable_federation: false  # Disable federation until ready to scale out
allow_public_rooms_over_federation: false
allow_public_rooms_without_auth: false

## Retention policy
retention:
  enabled: false

## Performance
rc_messages_per_second: 50
rc_message_burst_count: 100
federation_rc_window_size: 1000
federation_rc_sleep_limit: 10
federation_rc_sleep_delay: 500
federation_rc_reject_limit: 50
federation_rc_concurrent: 3

## Rate limiting
rc_registration:
  per_second: 0.17
  burst_count: 3

rc_joins:
  local:
    per_second: 0.5
    burst_count: 10
  remote:
    per_second: 0.1
    burst_count: 3

## Push notifications - disabled for testing
push:
  include_content: false
  enabled: false

## URL previews
url_preview_enabled: false

## Metrics - enabled with Prometheus support
enable_metrics: true

## Reports - disabled for testing
report_stats: false

## Spam checker - disabled for testing
spam_checker: []

## OpenID Connect configuration for OpenMeet authentication (FIXED)
oidc_providers:
  - idp_id: openmeet
    idp_name: "OpenMeet"
    idp_brand: "org.matrix.openmeet"
    discover: true  # Use OIDC discovery for proper endpoint resolution
    issuer: "https://localdev.openmeet.net/oidc"
    client_id: "matrix_synapse"
    client_secret: "${MATRIX_OIDC_CLIENT_SECRET}"
    scopes: ["openid", "profile", "email"]
    # Restored auth_code passthrough for platform-specific Matrix authentication
    # This allows the frontend to pass auth codes generated by /api/matrix/generate-auth-code
    passthrough_authorization_parameters: ["auth_code", "tenant_id", "login_hint"]
    # Removed manual endpoint configuration - using discovery
    # Removed skip_verification - using proper OIDC validation
    user_mapping_provider:
      config:
        localpart_template: "{{ user.preferred_username }}"
        display_name_template: "{{ user.name }}"
        email_template: "{{ user.email }}"
    allow_existing_users: true
    enable_registration: true

## Email configuration
email:
  enable_notifs: false
  notif_from: "matrix@example.com"
  smtp_host: "maildev"
  smtp_port: 1025
  smtp_user: ""
  smtp_pass: ""
  require_transport_security: false
  
## Experimental features
experimental_features:
  spaces_enabled: true

## Encryption settings
encryption_enabled_by_default_for_room_type: invite
enable_key_server: true